rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Content rules
    match /content/{contentId} {
      allow read: if true;
      allow create: if isAuthenticated() || (request.resource.data.isSample == true);
      allow update, delete: if isOwner(resource.data.userId);
    }

    // Collections rules
    match /collections/{collectionId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(resource.data.createdBy);
    }

    // Player Analysis Videos rules
    match /playerAnalysisVideos/{videoId} {
      allow read: if isAuthenticated() && (resource == null || isOwner(resource.data.userId));
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // Program rules
    match /programs/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // User rules
    match /users/{userId} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
  }
}